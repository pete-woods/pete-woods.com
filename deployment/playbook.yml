
- name: Deploy pete-woods.com
  hosts: localhost
  connection: local
  gather_facts: False

  vars:
    aws_region: eu-west-2
    site_name: pete-woods.com
    cloudfront_hosted_zone_id: Z2FDTNDATAQYW2

    www_site_name: "www.{{site_name}}"
    site_endpoint: "{{site_name}}.s3-website.{{aws_region}}.amazonaws.com"
    www_site_endpoint: "{{www_site_name}}.s3-website.{{aws_region}}.amazonaws.com"

  tasks:

    # Main site
    - name: Create main site bucket
      s3_bucket:
        name: "{{site_name}}"
        region: "{{aws_region}}"
        policy: "{{ lookup('file', 'pete-woods_com.policy.json', convert_data=False) }}"

    - name: Configure main site bucket for static hosting
      s3_website:
        name: "{{site_name}}"
        region: "{{aws_region}}"
        state: present
        suffix: index.html
        error_key: 404.html

    - name: Sync main site bucket contents
      s3_sync:
        bucket: "{{site_name}}"
        region: "{{aws_region}}"
        file_root: ../public/

    - name: Get Cloudfront facts if distribution was already present
      cloudfront_facts:
        distribution: true
        domain_name_alias: "{{site_name}}"
      register: cloudfront_facts
      ignore_errors: True

    - name: Create main site CloudFront distribution
      cloudfront_distribution:
        state: present
        default_origin_domain_name: "{{site_endpoint}}"
        default_cache_behavior:
          viewer_protocol_policy: redirect-to-https
          field_level_encryption_id: ""
        aliases: "{{site_name}}"
        price_class: PriceClass_100
      when: cloudfront_facts is failed

    - name: Get Cloudfront facts
      cloudfront_facts:
        distribution: true
        domain_name_alias: "{{site_name}}"
      register: cloudfront_facts

    - name: Get CloudFront distribution ID
      set_fact:
        cloudfront_distribution_id: "{{ cloudfront_facts.ansible_facts.cloudfront.keys() | list | first }}"

    - name: Invalidate the cache for the CloudFront distribution
      cloudfront_invalidation:
        distribution_id: "{{cloudfront_distribution_id}}"
        target_paths:
          - /*

    - name: Assign cloudfront result variable from facts
      set_fact:
        cloudfront_website_distribution:
          result: "{{ cloudfront_facts.ansible_facts.cloudfront[cloudfront_distribution_id] }}"

    - name: Get Cloudfront domain
      set_fact:
        cloudfront_domain: "{{ cloudfront_website_distribution.result.Distribution.DomainName }}"

    - name: Create DNS alias for CloudFront distribution on Route53
      route53:
        state: present
        zone: "{{site_name}}"
        record: "{{site_name}}"
        type: A
        value: "{{ cloudfront_domain }}"
        alias: True
        overwrite: True
        alias_hosted_zone_id: "{{ cloudfront_hosted_zone_id }}"

    # Redirect site
    - name: Create redirect bucket
      s3_bucket:
        region: "{{ aws_region }}"
        name: "{{www_site_name}}"
        policy: "{{ lookup('file', 'www_pete-woods_com.policy.json', convert_data=False) }}"

    - name: Configure redirect bucket's redirects
      s3_website:
        name: "{{www_site_name}}"
        region: "{{aws_region}}"
        state: present
        redirect_all_requests: "{{site_name}}"

    - name: Get Cloudfront redirect facts if distribution was already present
      cloudfront_facts:
        distribution: true
        domain_name_alias: "{{www_site_name}}"
      register: www_cloudfront_facts
      ignore_errors: True

    - name: Create redirect site CloudFront distribution
      cloudfront_distribution:
        state: present
        default_origin_domain_name: "{{www_site_endpoint}}"
        default_cache_behavior:
          viewer_protocol_policy: redirect-to-https
          field_level_encryption_id: ""
        aliases: "{{www_site_name}}"
        price_class: PriceClass_100
      when: www_cloudfront_facts is failed

    - name: Get Cloudfront redirect facts
      cloudfront_facts:
        distribution: true
        domain_name_alias: "{{www_site_name}}"
      register: www_cloudfront_facts

    - name: Get CloudFront redirect distribution ID
      set_fact:
        www_cloudfront_distribution_id: "{{ www_cloudfront_facts.ansible_facts.cloudfront.keys() | list | first }}"

    - name: Assign CloudFront redirect result variable from facts
      set_fact:
        www_cloudfront_website_distribution:
          result: "{{ www_cloudfront_facts.ansible_facts.cloudfront[www_cloudfront_distribution_id] }}"

    - name: Get Cloudfront redirect domain
      set_fact:
        www_cloudfront_domain: "{{ www_cloudfront_website_distribution.result.Distribution.DomainName }}"

    - name: Create DNS alias for CloudFront redirect distribution on Route53
      route53:
        state: present
        zone: "{{site_name}}"
        record: "{{www_site_name}}"
        type: A
        value: "{{ www_cloudfront_domain }}"
        alias: True
        overwrite: True
        alias_hosted_zone_id: "{{ cloudfront_hosted_zone_id }}"